[tool.poetry]
name = "jarvis-voice-assistant"
version = "0.1.0"
description = "A modular voice assistant application with support for multiple state-of-the-art models."
authors = ["Prompt <engineerprompt@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/PromtEngineer/JARVIS-VoiceAssistant"
packages = [{include = "*", from = "."}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]

[tool.poetry.dependencies]
python = "^3.10"
annotated-types = "^0.6.0"
anyio = "^4.3.0"
certifi = "^2024.2.2"
charset-normalizer = "^3.3.2"
distro = "^1.9.0"
h11 = "^0.14.0"
httpcore = "^1.0.5"
httpx = "^0.27.0"
idna = "^3.7"
openai = "^1.30.1"
pydantic = "^2.7.1"
pydantic-core = "^2.18.2"
pygame = "^2.5.2"
requests = "^2.31.0"
setuptools = "^69.5.1"
sniffio = "^1.3.1"
SpeechRecognition = "^3.10.4"
tqdm = "^4.66.4"
typing-extensions = "^4.11.0"
urllib3 = "^2.2.1"
colorama = "*"
deepgram-sdk = "*"
groq = "*"
python-dotenv = "*"
keyboard = "*"
elevenlabs = "*"
fastapi = "*"
uvicorn = "*"
numpy = "*"
sounddevice = "*"
cartesia = "*"
soundfile = "*"
ollama = "*"
pydub = "*"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[tool.poetry.scripts]
jarvis = "run_voice_assistant:main"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "-vv",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["tests"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/.venv/*",
    "*/.env/*",
    "*/virtualenv/*",
    "*/setup.py",
    "*/conftest.py",
    "*/.pytest_cache/*",
    "*/htmlcov/*",
    "*/dist/*",
    "*/build/*",
    "*.egg-info/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"